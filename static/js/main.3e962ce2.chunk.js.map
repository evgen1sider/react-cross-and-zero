{"version":3,"sources":["components/ChosePlayer/ChosePlayer.tsx","components/Square/Square.tsx","components/BoardLines/BoardLines.tsx","components/Board/Board.tsx","components/GameInfo/GameInfo.tsx","components/Game/Game.tsx","scripts/helper.ts","App.tsx","index.tsx"],"names":["ChosePlayer","props","firstPlayer","secondPlayer","useState","query1","setQuery1","query2","setQuery2","id","className","action","onSubmit","event","getName","htmlFor","name","type","value","onChange","target","Square","onClick","click","Linear","width","height","r","cx","cy","stroke","fill","x1","y1","x2","y2","strokeWidth","BoardLines","Board","squares","map","square","i","GameInfo","winner","isWinnerX","Game","Array","board","setBoard","xIsNext","setXIsNext","lines","length","a","b","c","calculateWinner","index","boardCopy","App","state","isStart","handleSubmit","preventDefault","console","log","currentTarget","getNameOfPlayers","values","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e962ce2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './ChosePlayer.scss';\n\ntype Props = {\n  firstPlayer: string;\n  secondPlayer: string;\n  onSubmit: (event: React.FormEvent) => void;\n  getName: (values: string[]) => void;\n};\n\nexport const ChosePlayer: React.FC<Props> = (props) => {\n  const { firstPlayer, secondPlayer } = props;\n  const [query1, setQuery1] = useState<string>('');\n  const [query2, setQuery2] = useState<string>('');\n\n  const handleChangeFirstPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery1(event.target.value);\n  };\n\n  const handleChangeSecondPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery2(event.target.value);\n  };\n\n  return (\n    <div id=\"popup\" className=\"chose-player\">\n      <form\n        action=\"#\"\n        className=\"chose-player__form form\"\n        onSubmit={(event) => {\n          props.getName([query1, query2]);\n          props.onSubmit(event);\n        }}\n      >\n        <label htmlFor=\"first-player\" className=\"form__item\">\n          first player:\n          <input\n            name=\"first-player\"\n            type=\"text\"\n            value={query1}\n            className=\"form__input\"\n            onChange={handleChangeFirstPlayer}\n          />\n        </label>\n        <label htmlFor=\"second-player\">\n          second player:\n          <input\n            name=\"second-player\"\n            type=\"text\"\n            value={query2}\n            className=\"form__input\"\n            onChange={handleChangeSecondPlayer}\n          />\n        </label>\n        <button type=\"submit\">Begin</button>\n      </form>\n      <div>\n        <p>{firstPlayer}</p>\n        <p>{secondPlayer}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Square.scss';\n\ntype Props = {\n  value: string;\n  click: () => void;\n};\n\nexport const Square: React.FC<Props> = (props) => {\n  const { value } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={props.click}\n    >\n      {value}\n    </button>\n  );\n};\n","import React from 'react';\nimport './BoardLines.scss';\n\nconst Linear: React.FC = () => (\n  <svg width=\"480\" height=\"24\">\n    <circle\n      r=\"4\"\n      cx=\"340\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n    <line\n      x1=\"340\"\n      y1=\"20\"\n      x2=\"20\"\n      y2=\"20\"\n      stroke=\"violet\"\n      strokeWidth=\"9\"\n    />\n    <circle\n      r=\"4\"\n      cx=\"20\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n  </svg>\n);\n\nexport const BoardLines = () => {\n  return (\n    <>\n      <div className=\"board__linear board__linear--1\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--2\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--3\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--4\">\n        <Linear />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './Board.scss';\nimport { Square } from '../Square';\nimport { BoardLines } from '../BoardLines';\n\ntype Props = {\n  squares: string[];\n  click: (index: number) => void;\n};\n\nexport const Board: React.FC<Props> = (props) => {\n  const { squares, click } = props;\n\n  return (\n    <div className=\"board\">\n      {squares.map((square: string, i: number) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Square key={i} value={square} click={() => click(i)} />\n      ))}\n      <BoardLines />\n    </div>\n  );\n};\n","import React from 'react';\nimport './GameInfo.scss';\n\ntype Props = {\n  winner: string | null;\n  isWinnerX: boolean;\n};\n\nexport const GameInfo: React.FC<Props> = (props) => {\n  const { winner, isWinnerX } = props;\n\n  return (\n    <div className=\"game-info\">\n      <p>\n        {winner ? `Winner is ${winner} ` : `Now turn:  ${(isWinnerX ? 'X' : 'O')}`}\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './Game.scss';\nimport { Board } from '../Board';\nimport { GameInfo } from '../GameInfo/GameInfo';\nimport { calculateWinner } from '../../scripts/helper';\n\nexport const Game: React.FC = () => {\n  const [board, setBoard] = useState<string[]>(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = (index:number) => {\n    const boardCopy = [...board];\n\n    if (winner || boardCopy[index]) {\n      return;\n    }\n\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  const startNewGame = () => {\n    return (\n      <button\n        type=\"button\"\n        className=\"game__start-button\"\n        onClick={() => setBoard(Array(9).fill(null))}\n      >\n        New Game\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"game\">\n      { startNewGame()}\n      <Board squares={board} click={handleClick} />\n      <GameInfo winner={winner} isWinnerX={xIsNext} />\n    </div>\n  );\n};\n","export function calculateWinner(squares: string[]) {\n  const lines: [number, number, number][] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n","import React from 'react';\nimport './App.scss';\nimport { ChosePlayer } from './components/ChosePlayer';\nimport { Game } from './components/Game';\n\ntype State = {\n  isStart: boolean;\n  firstPlayer: string;\n  secondPlayer: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStart: false,\n    firstPlayer: '',\n    secondPlayer: '',\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    console.log('submit', event.currentTarget.id);\n  };\n\n  getNameOfPlayers = (values: string[]) => {\n    // eslint-disable-next-line no-console\n    console.log('App player:', values); // input value\n\n    this.setState({\n      firstPlayer: values[0],\n      secondPlayer: values[1],\n    });\n  };\n\n  render() {\n    const { isStart, firstPlayer, secondPlayer } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(firstPlayer, secondPlayer);\n\n    return (\n      <div className=\"starter\">\n        <h2> Cross and Zeros</h2>\n        {!isStart ? (\n          <ChosePlayer\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n            onSubmit={this.handleSubmit}\n            getName={this.getNameOfPlayers}\n          />\n        ) : (null)}\n        <Game />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}