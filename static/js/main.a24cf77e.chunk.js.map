{"version":3,"sources":["components/ChosePlayer/ChosePlayer.tsx","components/SquareImages/SquareImages.tsx","components/Square/Square.tsx","components/BoardLines/BoardLines.tsx","components/Board/Board.tsx","components/GameInfo/GameInfo.tsx","components/Game/Game.tsx","scripts/helper.ts","App.tsx","index.tsx"],"names":["ChosePlayer","props","isStart","useState","query1","setQuery1","query2","setQuery2","domId","isHidden","setIsHidden","id","className","classNames","action","onSubmit","event","getName","htmlFor","name","type","value","placeholder","onChange","target","Zero","show","width","height","r","cx","cy","stroke","strokeWidth","fill","Cross","x1","y1","x2","y2","Square","item","onClick","click","Linear","BoardLines","RedLine","index","Board","squares","map","square","i","GameInfo","firstPlayer","secondPlayer","isDraw","winner","score","length","Game","Array","board","setBoard","xIsNext","setXIsNext","playerOneScore","setPlayerOneScore","playerTwoScore","setPlayerTwoScore","hosWin","setIsDraw","lines","a","b","c","calculateWinner","x","o","restart","addScores","boardCopy","arr","checkBoard","App","state","handleSubmit","preventDefault","getNameOfPlayers","values","setState","getScores","curentState","this","console","log","React","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a24cf77e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './ChosePlayer.scss';\n\ntype Props = {\n  isStart: boolean;\n  onSubmit: (event: React.FormEvent) => void;\n  getName: (values: string[]) => void;\n};\n\nexport const ChosePlayer: React.FC<Props> = (props) => {\n  const { isStart } = props;\n  const [query1, setQuery1] = useState<string>('');\n  const [query2, setQuery2] = useState<string>('');\n  const domId: string[] = ['first', 'second'];\n  const [isHidden, setIsHidden] = useState<boolean>(isStart);\n\n  const handleChangeFirstPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery1(event.target.value);\n  };\n\n  const handleChangeSecondPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery2(event.target.value);\n  };\n\n  return (\n    <div id=\"popup\" className={classNames('chose-player', isHidden && 'chose-player--hidden')}>\n      <form\n        action=\"#\"\n        className=\"chose-player__form form\"\n        onSubmit={(event) => {\n          props.getName([query1, query2]);\n          props.onSubmit(event);\n          setIsHidden(true);\n        }}\n      >\n        <fieldset className=\"form__fieldset\">\n          <legend><strong>Chose name: </strong></legend>\n          <div className=\"form__item\">\n            <label htmlFor={domId[0]}>\n              first player:\n            </label>\n            <input\n              name=\"first-player\"\n              type=\"text\"\n              id={domId[0]}\n              value={query1}\n              placeholder=\"fist player\"\n              className=\"form__input\"\n              onChange={handleChangeFirstPlayer}\n            />\n          </div>\n          <div className=\"form__item\">\n            <label htmlFor={domId[1]}>\n              second player:\n            </label>\n            <input\n              name=\"second-player\"\n              id={domId[1]}\n              type=\"text\"\n              value={query2}\n              placeholder=\"second player\"\n              className=\"form__input\"\n              onChange={handleChangeSecondPlayer}\n            />\n          </div>\n\n          <div className=\"form__submit-container\">\n            <button type=\"submit\" className=\"form__submit\">Begin</button>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './SquareImages.scss';\n\ntype Props = {\n  show: string;\n};\n\nexport const Zero: React.FC<Props> = ({ show }) => (\n  <div className={show === 'X' ? 'zero' : 'zero zero--show'}>\n    <svg width=\"100\" height=\"100\">\n      <circle\n        r=\"32\"\n        cx=\"50\"\n        cy=\"50\"\n        stroke=\"grey\"\n        strokeWidth=\"9\"\n        fill=\"transparent\"\n      />\n    </svg>\n  </div>\n);\n\nexport const Cross: React.FC<Props> = ({ show }) => (\n  <div className={show === 'O' ? 'cross' : 'cross cross--show'}>\n    <svg width=\"200\" height=\"100\">\n      <line\n        x1=\"10\"\n        y1=\"10\"\n        x2=\"80\"\n        y2=\"80\"\n        stroke=\"grey\"\n        strokeWidth=\"9\"\n      />\n      <line\n        x1=\"80\"\n        y1=\"10\"\n        x2=\"10\"\n        y2=\"80\"\n        stroke=\"grey\"\n        strokeWidth=\"9\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\nimport { Cross, Zero } from '../SquareImages';\n\nimport './Square.scss';\n\ntype Props = {\n  value: string;\n  click: () => void;\n};\n\nexport const Square: React.FC<Props> = (props) => {\n  const { value } = props;\n  let item;\n\n  if (value === 'X') {\n    item = <Cross show={value} />;\n  }\n\n  if (value === 'O') {\n    item = <Zero show={value} />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={props.click}\n    >\n      {item}\n    </button>\n  );\n};\n","import React from 'react';\nimport './BoardLines.scss';\n\nconst Linear: React.FC = () => (\n  <svg width=\"480\" height=\"24\">\n    <circle\n      r=\"4\"\n      cx=\"340\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n    <line\n      x1=\"340\"\n      y1=\"20\"\n      x2=\"20\"\n      y2=\"20\"\n      stroke=\"violet\"\n      strokeWidth=\"9\"\n    />\n    <circle\n      r=\"4\"\n      cx=\"20\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n  </svg>\n);\n\nexport const BoardLines:React.FC = () => {\n  return (\n    <>\n      <div className=\"board__linear board__linear--1\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--2\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--3\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--4\">\n        <Linear />\n      </div>\n    </>\n  );\n};\n\nexport const RedLine: React.FC<{index: number | null}> = ({ index }) => (\n  <div\n    className={index === null ? 'red-line' : `red-line--${index + 1}`}\n  >\n    <svg width=\"280\" height=\"24\">\n      <line\n        x1=\"280\"\n        y1=\"20\"\n        x2=\"20\"\n        y2=\"20\"\n        stroke=\"red\"\n        strokeWidth=\"9\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\nimport './Board.scss';\nimport { Square } from '../Square';\nimport { BoardLines, RedLine } from '../BoardLines';\n\ntype Props = {\n  squares: string[];\n  click: (index: number) => void;\n  index: [string, number] | null;\n};\n\nexport const Board: React.FC<Props> = (props) => {\n  const { squares, index, click } = props;\n\n  return (\n    <div className=\"board\">\n      {squares.map((square: string, i: number) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Square key={i} value={square} click={() => click(i)} />\n      ))}\n      <BoardLines />\n      <RedLine index={index ? index[1] : index} />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './GameInfo.scss';\n\ntype Props = {\n  winner: [string, number] | null;\n  isDraw: string;\n  firstPlayer: Player;\n  secondPlayer: Player;\n};\n\nexport const GameInfo: React.FC<Props> = (props) => {\n  const {\n    firstPlayer, secondPlayer, isDraw, winner,\n  } = props;\n\n  return (\n    <div className=\"game-info\">\n      <h3>Scores:</h3>\n      <p>\n        <span>{`${firstPlayer.name}: `}</span>\n        <span>{firstPlayer.score}</span>\n      </p>\n      <p>\n        <span>{`${secondPlayer.name}: `}</span>\n        <span>{secondPlayer.score}</span>\n      </p>\n      {winner && `${winner[0]} Win!!! in this round`}\n      {isDraw.length > 0\n        && <p>{(isDraw === 'Draw') ? `${isDraw} in last round` : `${isDraw} win in last round`}</p>}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './Game.scss';\nimport { Board } from '../Board';\nimport { GameInfo } from '../GameInfo/GameInfo';\nimport { calculateWinner } from '../../scripts/helper';\n\ntype Props = {\n  firstPlayer: Player;\n  secondPlayer: Player;\n  addScores: (x: number, o: number) => void;\n};\n\nexport const Game: React.FC<Props> = (props) => {\n  const { firstPlayer, secondPlayer } = props;\n  const [board, setBoard] = useState<Board>(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [playerOneScore, setPlayerOneScore] = useState<number>(firstPlayer.score);\n  const [playerTwoScore, setPlayerTwoScore] = useState<number>(secondPlayer.score);\n  const [hosWin, setIsDraw] = useState<string>('');\n  const winner: [string, number] | null = calculateWinner(board);\n  let x: number = playerOneScore;\n  let o: number = playerTwoScore;\n\n  const restart = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n    props.addScores(x, o);\n  };\n\n  const checkBoard = (arr: string[]) => {\n    for (let i = 0; i < arr.length; i += 1) {\n      const el = arr[i];\n\n      if (el === null) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleClick = (index: number) => {\n    const boardCopy = [...board];\n\n    if (winner) {\n      if (winner[0] === 'X') {\n        setPlayerOneScore(x += 1);\n        setIsDraw(firstPlayer.name);\n        restart();\n      }\n\n      if (winner[0] === 'O') {\n        setPlayerTwoScore(o += 1);\n        setIsDraw(secondPlayer.name);\n        restart();\n      }\n    }\n\n    if (winner || checkBoard(boardCopy)) {\n      restart();\n      if (!winner) {\n        setIsDraw('Draw');\n      }\n\n      return;\n    }\n\n    if (!boardCopy[index]) {\n      boardCopy[index] = xIsNext ? 'X' : 'O';\n    }\n\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__board\">\n        <Board squares={board} index={winner} click={handleClick} />\n\n        <GameInfo\n          isDraw={hosWin}\n          winner={winner}\n          firstPlayer={firstPlayer}\n          secondPlayer={secondPlayer}\n        />\n      </div>\n    </div>\n  );\n};\n","export function calculateWinner(squares: string[]): [string, number] | null {\n  const lines: [number, number, number][] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], i];\n    }\n  }\n\n  return null;\n}\n","import React from 'react';\nimport './App.scss';\nimport { ChosePlayer } from './components/ChosePlayer';\nimport { Game } from './components/Game';\n\ntype State = {\n  isStart: boolean;\n  firstPlayer: Player;\n  secondPlayer: Player;\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    isStart: false,\n    firstPlayer: {\n      name: 'player1',\n      score: 0,\n    },\n    secondPlayer: {\n      name: 'player2',\n      score: 0,\n    },\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  getNameOfPlayers = (values: string[]) => {\n    this.setState({\n      firstPlayer: {\n        name: values[0],\n        score: 0,\n      },\n      secondPlayer: {\n        name: values[1],\n        score: 0,\n      },\n      isStart: true,\n    });\n  };\n\n  getScores = (x: number, o: number) => {\n    this.setState((curentState) => ({\n      firstPlayer: {\n        name: curentState.firstPlayer.name,\n        score: x,\n      },\n      secondPlayer: {\n        name: curentState.secondPlayer.name,\n        score: o,\n      },\n      isStart: curentState.isStart,\n    }));\n  };\n\n  render() {\n    const { isStart, firstPlayer, secondPlayer } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(firstPlayer, secondPlayer);\n\n    return (\n      <div className=\"starter\">\n        {!isStart ? (\n          <ChosePlayer\n            isStart={isStart}\n            onSubmit={this.handleSubmit}\n            getName={this.getNameOfPlayers}\n          />\n        ) : (null)}\n        <Game\n          firstPlayer={firstPlayer}\n          secondPlayer={secondPlayer}\n          addScores={this.getScores}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}