{"version":3,"sources":["components/ChosePlayer/ChosePlayer.tsx","components/Square/Square.tsx","components/BoardLines/BoardLines.tsx","components/Board/Board.tsx","components/GameInfo/GameInfo.tsx","components/Game/Game.tsx","scripts/helper.ts","App.tsx","index.tsx"],"names":["ChosePlayer","props","firstPlayer","secondPlayer","isStart","useState","query1","setQuery1","query2","setQuery2","domId","isHidden","setIsHidden","id","className","classNames","action","onSubmit","event","getName","htmlFor","name","type","value","placeholder","onChange","target","Square","onClick","click","Linear","width","height","r","cx","cy","stroke","fill","x1","y1","x2","y2","strokeWidth","BoardLines","Board","squares","map","square","i","GameInfo","winner","isWinnerX","Game","Array","board","setBoard","xIsNext","setXIsNext","lines","length","a","b","c","calculateWinner","index","boardCopy","App","state","handleSubmit","preventDefault","console","log","currentTarget","getNameOfPlayers","values","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4af1b7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './ChosePlayer.scss';\n\ntype Props = {\n  firstPlayer: string;\n  secondPlayer: string;\n  isStart: boolean;\n  onSubmit: (event: React.FormEvent) => void;\n  getName: (values: string[]) => void;\n};\n\nexport const ChosePlayer: React.FC<Props> = (props) => {\n  const { firstPlayer, secondPlayer, isStart } = props;\n  const [query1, setQuery1] = useState<string>('');\n  const [query2, setQuery2] = useState<string>('');\n  const domId: string[] = ['first', 'second'];\n  const [isHidden, setIsHidden] = useState<boolean>(isStart);\n\n  const handleChangeFirstPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery1(event.target.value);\n  };\n\n  const handleChangeSecondPlayer = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery2(event.target.value);\n  };\n\n  return (\n    <div id=\"popup\" className={classNames('chose-player', isHidden && 'chose-player--hidden')}>\n      <form\n        action=\"#\"\n        className=\"chose-player__form form\"\n        onSubmit={(event) => {\n          props.getName([query1, query2]);\n          props.onSubmit(event);\n          setIsHidden(true);\n        }}\n      >\n        <fieldset className=\"form__fieldset\">\n          <legend><strong>Chose name: </strong></legend>\n          <div className=\"form__item\">\n            <label htmlFor={domId[0]}>\n              first player:\n            </label>\n            <input\n              name=\"first-player\"\n              type=\"text\"\n              id={domId[0]}\n              value={query1}\n              placeholder=\"fist player\"\n              className=\"form__input\"\n              onChange={handleChangeFirstPlayer}\n            />\n          </div>\n          <div className=\"form__item\">\n            <label htmlFor={domId[1]}>\n              second player:\n            </label>\n            <input\n              name=\"second-player\"\n              id={domId[1]}\n              type=\"text\"\n              value={query2}\n              placeholder=\"second player\"\n              className=\"form__input\"\n              onChange={handleChangeSecondPlayer}\n            />\n          </div>\n\n          <div className=\"form__submit-container\">\n            <button type=\"submit\" className=\"form__submit\">Begin</button>\n          </div>\n        </fieldset>\n      </form>\n      <div>\n        <p>{firstPlayer}</p>\n        <p>{secondPlayer}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Square.scss';\n\ntype Props = {\n  value: string;\n  click: () => void;\n};\n\nexport const Square: React.FC<Props> = (props) => {\n  const { value } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={props.click}\n    >\n      {value}\n    </button>\n  );\n};\n","import React from 'react';\nimport './BoardLines.scss';\n\nconst Linear: React.FC = () => (\n  <svg width=\"480\" height=\"24\">\n    <circle\n      r=\"4\"\n      cx=\"340\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n    <line\n      x1=\"340\"\n      y1=\"20\"\n      x2=\"20\"\n      y2=\"20\"\n      stroke=\"violet\"\n      strokeWidth=\"9\"\n    />\n    <circle\n      r=\"4\"\n      cx=\"20\"\n      cy=\"20\"\n      stroke=\"violet\"\n      fill=\"violet\"\n    />\n  </svg>\n);\n\nexport const BoardLines = () => {\n  return (\n    <>\n      <div className=\"board__linear board__linear--1\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--2\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--3\">\n        <Linear />\n      </div>\n      <div className=\"board__linear board__linear--4\">\n        <Linear />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './Board.scss';\nimport { Square } from '../Square';\nimport { BoardLines } from '../BoardLines';\n\ntype Props = {\n  squares: string[];\n  click: (index: number) => void;\n};\n\nexport const Board: React.FC<Props> = (props) => {\n  const { squares, click } = props;\n\n  return (\n    <div className=\"board\">\n      {squares.map((square: string, i: number) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Square key={i} value={square} click={() => click(i)} />\n      ))}\n      <BoardLines />\n    </div>\n  );\n};\n","import React from 'react';\nimport './GameInfo.scss';\n\ntype Props = {\n  winner: string | null;\n  isWinnerX: boolean;\n};\n\nexport const GameInfo: React.FC<Props> = (props) => {\n  const { winner, isWinnerX } = props;\n\n  return (\n    <div className=\"game-info\">\n      <p>\n        {winner ? `Winner is ${winner} ` : `Now turn:  ${(isWinnerX ? 'X' : 'O')}`}\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './Game.scss';\nimport { Board } from '../Board';\nimport { GameInfo } from '../GameInfo/GameInfo';\nimport { calculateWinner } from '../../scripts/helper';\n\nexport const Game: React.FC = () => {\n  const [board, setBoard] = useState<string[]>(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = (index:number) => {\n    const boardCopy = [...board];\n\n    if (winner || boardCopy[index]) {\n      return;\n    }\n\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  const startNewGame = () => {\n    return (\n      <button\n        type=\"button\"\n        className=\"game__start-button\"\n        onClick={() => setBoard(Array(9).fill(null))}\n      >\n        New Game\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"game\">\n      { startNewGame()}\n      <Board squares={board} click={handleClick} />\n      <GameInfo winner={winner} isWinnerX={xIsNext} />\n    </div>\n  );\n};\n","export function calculateWinner(squares: string[]) {\n  const lines: [number, number, number][] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n","import React from 'react';\nimport './App.scss';\nimport { ChosePlayer } from './components/ChosePlayer';\nimport { Game } from './components/Game';\n\ntype State = {\n  isStart: boolean;\n  firstPlayer: string;\n  secondPlayer: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStart: false,\n    firstPlayer: '',\n    secondPlayer: '',\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-console\n    console.log('submit', event.currentTarget.id);\n  };\n\n  getNameOfPlayers = (values: string[]) => {\n    // eslint-disable-next-line no-console\n    console.log('App player:', values); // input value\n\n    this.setState({\n      firstPlayer: values[0],\n      secondPlayer: values[1],\n      isStart: true,\n    });\n  };\n\n  render() {\n    const { isStart, firstPlayer, secondPlayer } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(firstPlayer, secondPlayer);\n\n    return (\n      <div className=\"starter\">\n        {!isStart ? (\n          <ChosePlayer\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n            isStart={isStart}\n            onSubmit={this.handleSubmit}\n            getName={this.getNameOfPlayers}\n          />\n        ) : (null)}\n        <Game />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}